<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="user-scalable=no,width=device-width"/>
    <title>test</title>
    <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?clientId=uDg8DaCVRq5KnivRwm3z"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
      </head>
      <style media="screen">
      #graphName{
        vertical-align: middle;
        margin:auto;
        line-height: 45px;
      }
      ul{
        list-style-type: none;
      }
      p.my_exer{
        float:left;
        line-height: 45px;
        padding: 15px;
        font-size:20px;
      }
        li{
          float:left;
          margin:5px 20px;
          padding:15px;
        }
        a{
          display: block;
          padding: 0 13px;
          height: 37px;
          background: #ff0;
          -webkit-border-radius: 19px;
          -moz-border-radius: 19px;
          border-radius: 19px;
          width: 100px;
          font-family: "yg740";
          font-size: 14px;
          line-height: 37px;
        }
        .center{
          text-align: center;
          border: 3px solid green;
        }
        .hot_keyword{
          background: #e7e7e7;
          overflow: hidden;
          padding:0 20px 0 40px;
          text-align: center;
          border-radius: 8px;
        }
      </style>
      <script src="//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>
  <body>
<div class="center">
  <p id="graphName">{{nickname}} 님의 {{title}}</p>
</div>

<canvas id="myChart" width="300" height="200"></canvas>
<hr>
<div class="hot_keyword">
  <p class="my_exer">내가 한 운동 : </p> <ul><li><a href="/stat/kotran/all">#전체보기</a></li> {{#each exercise_total}}<li><a href="/stat/kotran/{{this}}">#{{this}}</a></li>{{/each}}</ul>
</div>
<br><br><br><br>
<div class="table-responsive">
  <table class="table">
  <tr>
<td>운동시간</td>
<td>운동일</td>
  </tr>

{{#result }}
{{#each girls}}
<tr >
  <td>{{this.time}}</td>
  <td>{{this.create_time}}</td>
</tr>
{{/each}}

{{/result}}
</table>
</div>

<hr>
<canvas id="myPie" width="300" height="200"></canvas>

    <script>
    var displayed_date=[];
    var displayed_datee=[];
    var array_date=[];
    var array_time=[];
    var array_title=[];

    var array_date2=[];
    var array_time2=[];
    var array_title2=[];

    var date={girls:[]};
    var date_date=[];
    var r=[];
    var map=new Map();
    var map_title=new Map();
    function change(title){
      $("#graphName").text(title+ "운동 기록");
      location.href="/stat/kotran/"+title;
    }
    $(function(){
      console.log("시작");
        console.log("리다이렉트");



      var length=document.getElementsByClassName("create_time").length;
      var length2=document.getElementsByClassName("title_pie").length;
      if(length==0){
        location.href="/stat/kotran/all";
      }
      var fahrenheit = [0, 32, 45, 50, 75, 80, 99, 120];

      var celcius = fahrenheit.map(function(elem) {
          return Math.round((elem - 32) * 5 / 9);
      });
      console.log("celcius : "+celcius);
      console.log("length : "+length);
      // ES6
      // fahrenheit.map(elem => Math.round((elem - 32) * 5 / 9));

  if(length!=0){
    for(var i=0; i<length2; i++){
      console.log("i : "+i);
      array_title2.push(document.getElementsByClassName("title_pie")[i].value)
      array_time2.push(document.getElementsByClassName("time_pie")[i].value)
      array_date2.push(document.getElementsByClassName("create_time_pie")[i].value)
      console.log("rrrr:"+array_title2);
      for (var i = 0; i < array_title2.length; i++) {
        if(map_title.get(array_title2[i]) == null){
          map_title.set(array_title2[i], array_time2[i]);
        }else{
          map_title.set(array_title2[i], parseInt(map_title.get(array_title2[i])) + parseInt(array_time2[i]) + "");
        }
      }
      console.log("운동별 운동시간 : "+map_title.get("자전거"))
      var count_title=-1;
      map_title.forEach(function(value, key,index) {
        count_title++
        console.log(key + ' = ' + value+"index : "+count_title);

        myPieChart.data.labels[count_title] = key;
        myPieChart.data.datasets[0].data[count_title] = value;
        myPieChart.update();
      });
    }
    for(var i=0; i<length; i++){
      array_date.push(document.getElementsByClassName("create_time")[i].value)
      array_time.push(document.getElementsByClassName("time")[i].value)
      array_title.push(document.getElementsByClassName("title")[i].value)


      displayed_date.push(array_date[i]);

      console.log("DD :"+displayed_date)
      var test =displayed_date.filter(function(value,index,self){
         return (self.indexOf(value) !== index )})

      var cleanArray = displayed_date.filter((value,index,self)=>{ return (self.indexOf(value) === index )});
 console.log("DD2 :"+cleanArray)

    };
        //날짜별 총 운동 시간 산출.
          		for (var i = 0; i < array_date.length; i++) {
          			if(map.get(array_date[i]) == null){
          				map.set(array_date[i], array_time[i]);
          			}else{
          				map.set(array_date[i], parseInt(map.get(array_date[i])) + parseInt(array_time[i]) + "");
          			}
          		}
              var count=-1;
              var count_title=-1;
              map.forEach(function(value, key,index) {
                count++
                console.log(key + ' = ' + value+"index : "+count+"size : "+(map.size-count-1));
                myLineChart.data.labels[map.size-count-1] = key;
                myLineChart.data.datasets[0].data[map.size-count-1] = value;
                myLineChart.update();

              });

              //운동별 운동시간 산출

    console.log("result23 : "+cleanArray);
      console.log("j루프 끝"+displayed_date)
      console.log("array_time : "+array_time);
      for(var i=0; i<displayed_date.length; i++){
        date.girls.push({
          date : displayed_date[i],
          time : array_time[i]
        })
      }
      console.log(date.girls);
      console.log(date.girls.length);
      console.log(date.girls[0].date)
      var plus=[];
      var a;
for(var i=0; i<date.girls.length; i++){
//  date_date.push({displayed_date[i]:array_time[i]});
}
var obj = array_date;
for (var i = 0 in obj) {
  console.log("rr:"+obj[i]);
}
      console.log("aaaaaa"+date_date);
    // for(var i=0; i<date.girls.length; i++){
    //   for(var j=0; j<cleanArray.length; j++){
    //     if(cleanArray[j]==date.girls[i].date){
    //       console.log("matched : "+cleanArray[j])
    //       console.log(date.girls[i].time);
    //       date.girls[i].time=parseInt(date.girls[i].time);
    //
    //       for(var k=0; k<cleanArray.length; k++){
    //         console.log("cleanarray : "+cleanArray[k]);
    //         if(cleanArray[j]==cleanArray[k]){
    //           if(map.get(cleanArray[k])){
    //             console.log(true+"clean array k : "+cleanArray[k]);
    //             a=map.get(cleanArray[k])
    //             console.log("a value : "+a);
    //             map.set(cleanArray[k],a);
    //           }
    //           if(map.get("hahaha")){
    //             console.log(false);
    //           }
    //           map.set(cleanArray[k],date.girls[i].time);
    //           console.log(map.get(cleanArray[k]))
    //           plus=plus+date.girls[i].time;
    //         }
    //         console.log("mapsize : "+map.size);
    //         console.log("map : "+map.get("2017/06/27"));
    //         cleanArray[k].concat(date.girls[i].time);
    //       }
    //       console.log("concated : "+cleanArray);
    //     }
    //     console.log("plused : "+plus);
    //   }
    // }
  }
    })
    var canvas = document.getElementById('myChart');
var data = {
	 labels: [],
	datasets: [
		{
      label: "My First dataset",
           fill: false,
           lineTension: 0.1,
           backgroundColor: "rgba(75,192,192,0.4)",
           borderColor: "rgba(75,192,192,1)",
           borderCapStyle: 'butt',
           borderDash: [],
           borderDashOffset: 0.0,
           borderJoinStyle: 'miter',
           pointBorderColor: "rgba(75,192,192,1)",
           pointBackgroundColor: "#fff",
           pointBorderWidth: 1,
           pointHoverRadius: 5,
           pointHoverBackgroundColor: "rgba(75,192,192,1)",
           pointHoverBorderColor: "rgba(220,220,220,1)",
           pointHoverBorderWidth: 2,
           pointRadius: 5,
           pointHitRadius: 10,
           data: [],
		}
	]
};
var options = {	animation: false };
var ctx = $('#myChart').get(0).getContext('2d');
var t='bar';
var myLineChart = Chart.Line(canvas,{
	data:data,
  options:options
});
var ctx = $('#myPie').get(0).getContext('2d');
data_pie = {
    datasets: [{
        backgroundColor: [
       "#2ecc71",
       "#3498db",
       "#95a5a6"

     ]
    }],


};
var myPieChart = new Chart(ctx,{
    type: 'pie',
    data: data_pie,
    options: options
});
</script>

<input type="hidden" id="type" name="type" value="{{title}}">
{{#result }}
{{#each girls}}

  <input type="hidden" id="chan" class="title" name="" value="{{this.title}}" onchange="chan();">
  <input type="hidden" id="chan" class="time" name="" value="{{this.time}}" onchange="chan();">
  <input type="hidden" id="chan" class="create_time" name="" value="{{this.create_time}}" onchange="chan();">
{{/each}}

{{/result}}
{{#results }}
{{#each results}}

  <input type="hidden" id="chan" class="title_pie" name="" value="{{this.title}}" onchange="chan();">
  <input type="hidden" id="chan" class="time_pie" name="" value="{{this.time}}" onchange="chan();">
  <input type="hidden" id="chan" class="create_time_pie" name="" value="{{this.create_time}}" onchange="chan();">
{{/each}}

{{/results}}
  </body>
</html>
